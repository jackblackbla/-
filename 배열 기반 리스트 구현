#include <stdio.h>
#include "ArrayList.h"

void ListInit(List * plist)
{
	plist->curPosition = -1;
	plist->numOfData = 0;
}

void LInsert(List * plist, LData data)
{if (plist->numOfData > LIST_LEN){
	printf("더 이상 저장할 수 없습니다");
}// 데이터의 수가 배열의 최대 길이를 넘어섰을때 왜 고려 안해
	plist->arr[plist->numOfData] = data;
	(plist->curPosition)++;// 현재 자리수는 왜 증가해? 증가 시킬 필요 없었잖아
	plist->numOfData++;

}

int LFirst(List * plist, LData * pdata)
{
	if (plist->numOfData == 0) {
		printf("No Data");
		return 0;
	}
	else if (plist->numOfData >= 1) {
		plist->curPosition = 0;
		pdata = plist->arr[plist->curPosition];
		return 1;
	}
}

int LNext(List * plist, LData * pdata)
{
	if (!LFirst(plist, pdata)) {
		return 0;
	}
	else {
		if (plist->curPosition < plist->numOfData - 1) {
			*pdata = plist->arr[plist->curPosition + 1];// 하나는 포인터 변수고 하나는 변수인데 주소에다가 변수 넣을거야?
			plist->curPosition++;
			return 1;
		}
		else {
			printf("더 참조할 공간이 없습니다!");//왜 여기에는 거짓 리턴값 안나타내
			return 0;
		}
	}
}

LData LRemove(List * plist)//제거부분은 글러먹음
{	LData k;
	k = plist->arr[plist->curPosition];
	for (int i = plist->curPosition; i < plist->numOfData - 1; i++){

	plist->arr[i] = plist->arr[i + 1];
	}
	plist->numOfData--;
	plist->curPosition--;
	//요소 제거 했는데 최근에 참조한 데이터의 인덱스 가지고 있어야지 인덱스 그대로 내비 둘거야?
	return k;
}

int LCount(List * plist)
{
	return plist->numOfData;
}
